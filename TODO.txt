Fix memory leak in 'SerialWidget::initOptionsWidget()' in file: 'serial_widget.cpp'

Add configurable limits for ServoBoard Max and Min values (ie. adjustable range) ex: 0-97
	-Factor out constants to a single file

Temp file write on run and tab switch.

Add a way to show the number of times that a sequence has been played and the number of times that it will be played.

Add to sequence a check to see if it is compatible with the store commands.

Software only delay, shorter than what we have. Notate that these cannot be placed in hardware.

Respond to global values PWMSweep, PWM replay

Make the interactions for playing and pausing cleaner, maybe have buttons showing and hiding when they are (not) needed.

Factor out maps for PWMRepeat and SequenceRepeat to have one map for all classes.

Check if there are unsaved changes on close/load and prompt to save.

Make the interactions for playing and pausing cleaner, maybe have buttons showing and hiding when they are (not) needed.

Find out if the timer in ServoBoardController is leaking memory.

Make advanced options popup cleaner.

Add a way to drag and drop in SER and SERVO files to have them open over what is there.

Make a "live mode" where dragging the sliders/spin boxes makes an instant change on the board
	-can take 'snapshots' of a position and save it.
	-used to quickly build up a sequence.

Add an automatic updater to grab updates from a server.

Make a real style sheet for all the pages, add images to the play button ect. 
	-Make the background colors constant.

Turn trace into a complete hyperterminal replacment for debugging.

Proper syntax highlighting for the textfield -- find a different method for doing the pointer.

Emergency stop for runnning a sequence

Networking tab doesn't get a AbstactSerialPointer anymore, need to get it a pointer if needed.

ADAM QUESTIONABLE DESIGN CHOICES

Static member used to track filename for save function. Not sure if that is The Right Thing.

Servoboard Controller pops up a few file dialogs and thus breaks MVC

Got rid of position inheriting QObject, it didn't need any of the function, and a copy constructor is great for such a small class.
